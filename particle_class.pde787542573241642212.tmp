// Based on code by Daniel Shiffman
// Alex Vincent-Hill

class Particle {
  PVector position;
  PVector velocity;
  PVector acceleration;
  float lifespan;
  //TBD: make mass and density work
  float mass;
  float density;
  float elasticity;
  float radius;
  //TBD: display color better
  float[] RGBcolor = {255,255,255};
  float agingRate;

  Particle() {
    position = new PVector(width/2, height/2);
    velocity = new PVector(random(-10,10), random(-10,10));
    acceleration = new PVector(0,0);
    lifespan = 300;
    mass = random(1,10);
    radius = mass;
    agingRate = 10;
  }

  void applyForce(PVector force) {
    acceleration.add(force);
  }

  void run() {
    update();
    display();
  }

  void update() {
    velocity.add(acceleration);
    position.add(velocity);
    //colors particles with scaled momentum
    RGBcolor[1] = velocity.mag()*mass*2;
    RGBcolor[2] = velocity.mag()*mass*2;
    //ages particle
    lifespan -= agingRate;
  }

  //displays ellipses with particles properties
  void display() {
    fill(RGBcolor[0], RGBcolor[1], RGBcolor[2]);
    ellipse(position.x, position.y, radius, radius);
  }
  
  boolean isDead() {
    if (lifespan<=0){
      return true;
    }
    else {
    return false;
    }
  }
}